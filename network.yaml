555-BCKO:
  desc: Intel X710 Dual Port 10GbE SFP+ & i350 Dual Port 1GbE, rNDC
  name: Intel X710 Dual Port 10GbE SFP+ & i350 Dual Port 1GbE, rNDC
  price: 593.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 1 Gbps
540-BBUM:
  desc: Broadcom 57414 Dual Port 10/25GbE SFP28, rNDC
  name: Broadcom 57414 Dual Port 10/25GbE SFP28, rNDC
  price: 709.00
  notice: []
  type: FLOM
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 25 Gbps
540-BBCZ:
  desc: Intel Ethernet i350 Quad Port 1GbE BASE-T Adapter, PCIe Low Profile
  name: Intel Ethernet i350 Quad Port 1GbE BASE-T Adapter, PCIe Low Profile
  price: 499.00
  notice: []
  type: PCIe
  port:
    count: 4
    spec:
      - BASE-T
    data-rate:
      - 1 Gbps
540-BBVK:
  desc: Broadcom 57414 Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  name: Broadcom 57414 Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 25 Gbps
540-BBDB:
  desc: Intel Ethernet I350 Dual Port 1GbE BASE-T Adapter, PCIe Low Profile
  name: Intel Ethernet I350 Dual Port 1GbE BASE-T Adapter, PCIe Low Profile
  price: 229.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 1 Gbps
555-BCKN:
  desc: Intel X710 Dual Port 10GbE SFP+ Adapter, PCIe Low Profile
  name: Intel X710 Dual Port 10GbE SFP+ Adapter, PCIe Low Profile
  price: 649.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BBVJ:
  desc: Broadcom 57416 Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  name: Broadcom 57416 Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  price: 589.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
540-BBRL:
  desc: Intel X550 Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  name: Intel X550 Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  price: 749.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
406-BBLD:
  desc: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  name: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 25 Gbps
      - 10 Gbps
540-BBVI:
  desc: Broadcom 57412 Dual Port 10GbE SFP+ Adapter, PCIe Low Profile
  name: Broadcom 57412 Dual Port 10GbE SFP+ Adapter, PCIe Low Profile
  price: 559.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BCMQ:
  desc: Mellanox ConnectX-5 Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  name: Mellanox ConnectX-5 Dual Port 10/25GbE SFP28 Adapter, PCIe Low Profile
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 25 Gbps
540-BBUY:
  desc: Intel X550 Quad Port 10GbE BASE-T, rNDC
  name: Intel X550 Quad Port 10GbE BASE-T, rNDC
  price: 839.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
406-BBLG:
  desc: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28, rNDC
  name: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28, rNDC
  price: 709.00
  notice: []
  type: FLOM
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 25 Gbps
      - 10 Gbps
406-BBLE:
  desc: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28  Adapter, PCIe Full Height
  name: Mellanox ConnectX-4 LX Dual Port 10/25GbE SFP28  Adapter, PCIe Full Height
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 25 Gbps
      - 10 Gbps
407-BBDT:
  desc: Cisco 10Gb SFP+ Twinax Cable, 5m
  name: Cisco 10Gb SFP+ Twinax Cable, 5m
  price: 279.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
407-BBEE:
  desc: Dell Networking, Transceiver, SFP+, 10GbE, LR, 1310nm Wavelength, 10km Reach
  name: Dell Networking, Transceiver, SFP+, 10GbE, LR, 1310nm Wavelength, 10km Reach
  price: 1100.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
407-BBOH:
  desc: Mellanox, Transceiver, SFP+, 10Gb, Short-Range
  name: Mellanox, Transceiver, SFP+, 10Gb, Short-Range
  price: 349.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
407-BBVK:
  desc: SFP+, SR, Optical Transceiver, Intel, 10Gb-1Gb
  name: SFP+, SR, Optical Transceiver, Intel, 10Gb-1Gb
  price: 279.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 1 Gbps
407-BBZO:
  desc: SFP+ SR 10GbE Optical Transceiver, High Temperature, Dell
  name: SFP+ SR 10GbE Optical Transceiver, High Temperature, Dell
  price: 795.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
407-BCBE:
  desc: Dell EMC PowerEdge SFP+ SR Optic 10GbE 850nm
  name: Dell EMC PowerEdge SFP+ SR Optic 10GbE 850nm
  price: 239.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
429-ABHW:
  desc: Accessory, Filter, OEM PowerEdge XR2 Server Marine Grade
  name: Accessory, Filter, OEM PowerEdge XR2 Server Marine Grade
  price: 1349.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec: []
    data-rate: []
470-AAGN:
  desc: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 1 Meter
  name: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 1 Meter
  price: 75.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
470-AAGP:
  desc: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 3 Meter
  name: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 3 Meter
  price: 105.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
470-AAGR:
  desc: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 5 Meter
  name: Dell Networking, Cable, SFP+ to SFP+, 10GbE, Copper Twinax Direct Attach Cable, 5 Meter
  price: 135.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
470-ABOT:
  desc: Dell Networking Cable,100GbE QSFP28 to 4 x SFP28 Passive Copper Breakout Cable, 3 Meter
  name: Dell Networking Cable,100GbE QSFP28 to 4 x SFP28 Passive Copper Breakout Cable, 3 Meter
  price: 574.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - QSFP28
      - QSFP+
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 100 Gbps
470-ABOW:
  desc: Dell Networking Cable,100GbE QSFP28 to QSFP28, Passive Copper Direct Attach Cable, 2 Meter
  name: Dell Networking Cable,100GbE QSFP28 to QSFP28, Passive Copper Direct Attach Cable, 2 Meter
  price: 325.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - QSFP28
      - QSFP+
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 100 Gbps
470-ADDY:
  desc: Ruggedized 901D Kit, XR2 -  Low Profile Riser Only
  name: Ruggedized 901D Kit, XR2 -  Low Profile Riser Only
  price: 249.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec: []
    data-rate: []
540-BBBB:
  desc: Intel X520 Dual Port 10GbE SFP+ & i350 Dual Port 1GbE BASE-T, rNDC
  name: Intel X520 Dual Port 10GbE SFP+ & i350 Dual Port 1GbE BASE-T, rNDC
  price: 709.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - SFP+
      - QSFP
      - SFP
      - BASE-T
    data-rate:
      - 10 Gbps
      - 1 Gbps
540-BBCT:
  desc: Intel X520 Dual Port 10GbE SFP+ Adapter, PCIe Full Height
  name: Intel X520 Dual Port 10GbE SFP+ Adapter, PCIe Full Height
  price: 779.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BBDH:
  desc: Intel Ethernet I350 Dual Port 1GbE BASE-T Adapter, PCIe Full Height
  name: Intel Ethernet I350 Dual Port 1GbE BASE-T Adapter, PCIe Full Height
  price: 229.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 1 Gbps
540-BBHP:
  desc: Intel X710 Dual Port 10GbE Direct Attach SFP+ Adapter, PCIe Full Height
  name: Intel X710 Dual Port 10GbE Direct Attach SFP+ Adapter, PCIe Full Height
  price: 650.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BBRO:
  desc: Intel X550 Dual Port 10GbE BASE-T Adapter, PCIe Full Height
  name: Intel X550 Dual Port 10GbE BASE-T Adapter, PCIe Full Height
  price: 749.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
540-BBUH:
  desc: Broadcom 57412 Dual Port 10GbE SFP+ Adapter, PCIe Full Height
  name: Broadcom 57412 Dual Port 10GbE SFP+ Adapter, PCIe Full Height
  price: 559.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BBUJ:
  desc: Broadcom 57414 Dual Port 10/25GbE SFP28 Adapter, PCIe Full Height
  name: Broadcom 57414 Dual Port 10/25GbE SFP28 Adapter, PCIe Full Height
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 25 Gbps
540-BBUK:
  desc: Broadcom 57416 Dual Port 10GbE BASE-T & 5720 Dual Port 1GbE BASE-T, rNDC
  name: Broadcom 57416 Dual Port 10GbE BASE-T & 5720 Dual Port 1GbE BASE-T, rNDC
  price: 589.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
      - 1 Gbps
540-BBUL:
  desc: Broadcom 57412 Dual Port 10GbE SFP+ & 5720 Dual Port 1GbE BASE-T rNDC
  name: Broadcom 57412 Dual Port 10GbE SFP+ & 5720 Dual Port 1GbE BASE-T rNDC
  price: 469.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - SFP+
      - QSFP
      - SFP
      - BASE-T
    data-rate:
      - 10 Gbps
      - 1 Gbps
540-BBUZ:
  desc: Intel X550 Dual Port 10GbE BASE-T & i350 Dual Port 1GbE BASE-T, rNDC
  name: Intel X550 Dual Port 10GbE BASE-T & i350 Dual Port 1GbE BASE-T, rNDC
  price: 639.00
  notice: []
  type: FLOM
  port:
    count: 4
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
      - 1 Gbps
540-BBVO:
  desc: Intel X710 Quad Port 10GbE BASE-T Adapter, PCIe Low Profile
  name: Intel X710 Quad Port 10GbE BASE-T Adapter, PCIe Low Profile
  price: 1229.00
  notice: []
  type: PCIe
  port:
    count: 4
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
540-BBWC:
  desc: Intel X710 Dual Port 10Gb, SFP+, OCP Mezzanine card
  name: Intel X710 Dual Port 10Gb, SFP+, OCP Mezzanine card
  price: 449.00
  notice: []
  type: FLOM
  port:
    count: 2
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
540-BBZG:
  desc: OCP Mezzanine Bracket for C6420
  name: OCP Mezzanine Bracket for C6420
  price: 0.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec: []
    data-rate: []
540-BCIU:
  desc: Mellanox ConnectX-5 EX Dual Port 40/100GbE QSFP28 Adapter, PCIe Full Height
  name: Mellanox ConnectX-5 EX Dual Port 40/100GbE QSFP28 Adapter, PCIe Full Height
  price: 2300.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - QSFP28
      - QSFP+
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 40 Gbps
      - 100 Gbps
540-BCKU:
  desc: Broadcom 57414 Dual Port 25GbE SFP28 LOM Mezz Card
  name: Broadcom 57414 Dual Port 25GbE SFP28 LOM Mezz Card
  price: 889.00
  notice: []
  type: FLOM
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 25 Gbps
540-BCKX:
  desc: Broadcom 57414 Dual Port 25GbE SFP28 LOM Mezz Card, for C6420 only
  name: Broadcom 57414 Dual Port 25GbE SFP28 LOM Mezz Card, for C6420 only
  price: 419.00
  notice: []
  type: FLOM
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 25 Gbps
540-BCNM:
  desc: Mellanox ConnectX-5 Dual Port 10/25GbE SFP28 Adapter, PCIe Full Height
  name: Mellanox ConnectX-5 Dual Port 10/25GbE SFP28 Adapter, PCIe Full Height
  price: 709.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
      - 25 Gbps
540-BCRQ:
  desc: Intel X710-T2L Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  name: Intel X710-T2L Dual Port 10GbE BASE-T Adapter, PCIe Low Profile
  price: 799.00
  notice: []
  type: PCIe
  port:
    count: 2
    spec:
      - BASE-T
    data-rate:
      - 10 Gbps
374-BBWT:
  desc: PCIe Blank Filler, R6515 / R7515
  name: PCIe Blank Filler, R6515 / R7515
  price: 0.00
  notice: []
  type: PCIe
  port:
    count: 1
    spec: []
    data-rate: []
407-BBBY:
  desc: Dell Networking, Transceiver, 40GbE QSFP+, SR4, 850nm, MPO, 100-150m Reach on OM3/OM4, MMF
  name: Dell Networking, Transceiver, 40GbE QSFP+, SR4, 850nm, MPO, 100-150m Reach on OM3/OM4, MMF
  price: 1265.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - QSFP+
      - SFP28
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 40 Gbps
407-BBEL:
  desc: Dell Networking, Transceiver, SFP, 1000BASE-T
  name: Dell Networking, Transceiver, SFP, 1000BASE-T
  price: 134.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP
      - BASE-T
    data-rate: []
407-BBDU:
  desc: Cisco 10Gb SFP+ Twinax Cable, 3m
  name: Cisco 10Gb SFP+ Twinax Cable, 3m
  price: 199.00
  notice: []
  type: FLOM
  port:
    count: 1
    spec:
      - SFP+
      - QSFP
      - SFP
    data-rate:
      - 10 Gbps
